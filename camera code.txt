import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter_speed_dial/flutter_speed_dial.dart';
import 'package:gap/gap.dart';
import 'package:gesture_zoom_box/gesture_zoom_box.dart';
import 'package:intl/intl.dart';
import 'package:schs/utils/app_styles.dart';
//import 'package:web_socket_channel/io.dart';
//import 'package:web_socket_channel/web_socket_channel.dart';
//import 'package:advanced_splashscreen/advanced_splashcreen.dart';
//import 'blinkingTimer.dart';


class OutdoorSecurity extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData.dark(),
      home: CctvScreen(channel: IOWebSocketChannel.connect(Url),),
      );
  }
}

class CctvScreen extends StatefulWidget {

channel: IOWebSocketChannel.connect(Url),

  final WebSocketChannel channel;

  const CctvScreen({required Key key, @required this.channel}) : super(key: key);

  @override
  State<CctvScreen> createState() => _CctvScreenState();
}

class _CctvScreenState extends State<CctvScreen> {
  final videoWidth = 640;
  final VideoHeight = 480;

  double newVideoSizeWidth = 640;
  double newVideoSizeHeight = 480;

  late bool isLandscape;
  late String _timestring;

  var _globalKey = new GlobalKey();

  @override
  void initState() {
    super.initState();
    isLandscape = false;
  }

  @override
  void dispose(){
    widget.channel.sink.close();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Styles.bgColor,
      body: ListView(
        children: [
          Container(
            padding: const EdgeInsets.symmetric(horizontal: 15),
            child: Column(
              children: [
                const Gap(30),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          "OUTDOOR CCTV SECURITY",
                          style: Styles.headLineStyle3,
                        ),
                        const Gap(5),
                        Text(
                          "Smart Connected Home",
                          style: Styles.headLineStyle1,
                        ),
                      ],
                    ),
                    Container(
                      height: 60,
                      width: 60,
                      decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(10),
                          image: DecorationImage(
                              fit: BoxFit.cover,
                              image:
                                  AssetImage("assets/images/cloudHome.png"))),
                    ),
                  ],
                ),
              ],
            ),
          ),
          const Gap(30),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Padding(
                padding: const EdgeInsets.only(left: 10.0),
                child: Text(
                  "CCTV Camera",
                  style: Styles.headLineStyle2,
                ),
              ),
              InkWell(
                onTap: () {
                  print("View all lights page in progress");
                },
                child: Padding(
                  padding: const EdgeInsets.only(right: 10.0),
                  child: Text(
                    "Turn off",
                    style: Styles.headLineStyle3
                        .copyWith(color: Styles.primaryColor),
                  ),
                ),
              )
            ],
          ),
          const Gap(30),
          //------------------- camera code ------------------ //

          OrientationBuilder(builder: (context, orientation){
            var screenWidth = MediaQuery.of(context).size.width;
            var screenHeight = MediaQuery.of(context).size.height;
            
            if(orientation == Orientation.portrait){
              isLandscape = false;
              newVideoSizeWidth = screenWidth > videoWidth ? videoWidth : screenWidth;
              newVideoSizeHeight = VideoHeight * newVideoSizeWidth / videoWidth;
            }else{
              isLandscape = true;
              newVideoSizeHeight = screenHeight > videoHeight ? videoHeight : screenHeight;
              newVideoSizeWidth = VideoWidth * newVideoSizeHeight / videoHeight;
            }          
            
            return Container(
            decoration: BoxDecoration(
            gradient: LinearGradient(colors: [
                  hexStringToColor("CB2B93"),
                  hexStringToColor("9546C4"),
                  hexStringToColor("5E61F4")
                ], begin: Alignment.topCenter, end: Alignment.bottomCenter),
            ),
            child: Row(
              children: [
                StreamBuilder(
                  stream: widget.channel.stream,
                  builder: (context, snapshot) {
                  if (!snapshot.hasData) {
                      return Center(
                      child: CircularProgressIndicator(
                      valueColor:
                      AlwaysStoppedAnimation<Color>(Colors.white),
                            ),
                          );
                        } else {
                          return Stack(
                            children: <widget>[
                            RepaintBoundary(
                              key: _globalKey,
                              GestureZoomBox(
                            maxScale: 5.0,
                            doubleTapScale: 2.0,
                            duration: Duration(milliseconds: 200),
                            child: Image.memory(
                              snapshot.data,
                              gaplessPlayback: true,
                              width: newVideoSizeWidth,
                              height: newVideoSizeHeight,
                            ),
                            ),
                            ),

                            Positioned.fill(
                              child: Align(
                                child: Column(
                                  children: <widget>[
                                    SizedBox(
                                      height: 20,
                                    ),

                                    Text('Live | $_timeString',
                                    style: TextStyle(fontSize: 12,
                                    FontWeight.bold)
                                    ),
                                  ],
                                ),
                                alignment: Alignment.topCenter,
                              ))

                            Expanded(
                              flex: 1,
                              child: Container(
                                width: MediaQuery.of(context).size.width,
                                child: Padding(
                                  padding: const EdgeInsets.symmetric(vertical: 16),
                                  child: Row(
                                    crossAxisAlignment: CrossAxisAlignment.start,
                                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                                    children: <widget>[
                                      IconButton(icon: Icon(Icons.videocam,
                                      size: 24,)),
                                      IconButton(icon: Icon(Icons.photo_camera,
                                      size: 24,)
                                      onPressed: takeScreenShot,
                                      ),
                                    ]
                                  )))
                              )
 
                            ],
                          );
                        }
                      }
                  ),
                ],
              ),
            ),
          ),/* camera screen code ends here */
          ),
        ],
        
      ),
      floatingActionButton: _getFab(),
    );
    
    
    takeScreenShot() async {
    RenderRepaintBoundary boundary = _globalKey.currentContext.findRenderObject();
    var image = await boundary.toImage();
    var byteData = await image.toByteData(format: ImageByteFormat.png);
    var pngBytes = byteData.buffer.asUint8List();
    final res = await _imageSaver.saveImage(imageBytes: pngBytes);

    Fluttertoast.showToast(msg: res? "Photo Saved Successfully" : "Failed! Try Again!!!",
    toastLength: Toast.LENGTH_SHOT,
    gravity: ToastGravity.CENTER,
    timeInSecForIos: 1,
    backgroundColor: Colors.red,
    textColor: Colors.white,
    fontSize: 16.0);
    }

    String _formatDateTime(DateTime dateTime){
      return DateFormat('MM/dd hh:mm:ss aaa').format(dateTime);
    }

    void _getTime(){
      final DateTime now = DateTime.now();
      setState(() {
        _timeString = _formatDateTime(now);
      });
    }

    Widget _getFab(){
      return SpeedDial(
        animatedIcon: AnimatedIcons.menu_close,
        animatedIconTheme: IconThemeData(size: 22),
        visible: isLandscape,
        curve: Curves.bounceIn,
        children: [
          SpeedDialChild(
            child: Icon(Icons.photo_camera),
            onTap: takeScreenShot,
          ),
          SpeedDialChild(
            child: Icon(Icons.videocam),
            onTap: (() {
              
            }),
          )
        ],
      );
    }
  }
}
